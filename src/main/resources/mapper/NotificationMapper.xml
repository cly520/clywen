<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.cy.ly.mappers.NotificationMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.cy.ly.javaBean.Notification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="notifier" property="notifier" jdbcType="INTEGER" />
    <result column="receiver" property="receiver" jdbcType="INTEGER" />
    <result column="outer_id" property="outerId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="notifier_name" property="notifierName" jdbcType="VARCHAR" />
    <result column="out_title" property="outTitle" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, notifier, receiver, outer_id, type, gmt_create, status, notifier_name, out_title
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.cy.ly.javaBean.NotificationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.cy.ly.javaBean.NotificationExample" >
    delete from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.cy.ly.javaBean.Notification" >
    insert into notification (id, notifier, receiver, 
      outer_id, type, gmt_create, 
      status, notifier_name, out_title
      )
    values (#{id,jdbcType=INTEGER}, #{notifier,jdbcType=INTEGER}, #{receiver,jdbcType=INTEGER}, 
      #{outerId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{gmtCreate,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{notifierName,jdbcType=VARCHAR}, #{outTitle,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.cy.ly.javaBean.Notification" >
    insert into notification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="notifier != null" >
        notifier,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="outerId != null" >
        outer_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="notifierName != null" >
        notifier_name,
      </if>
      <if test="outTitle != null" >
        out_title,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="notifier != null" >
        #{notifier,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="outerId != null" >
        #{outerId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="notifierName != null" >
        #{notifierName,jdbcType=VARCHAR},
      </if>
      <if test="outTitle != null" >
        #{outTitle,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.cy.ly.javaBean.NotificationExample" resultType="java.lang.Integer" >
    select count(*) from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notification
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.notifier != null" >
        notifier = #{record.notifier,jdbcType=INTEGER},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=INTEGER},
      </if>
      <if test="record.outerId != null" >
        outer_id = #{record.outerId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.notifierName != null" >
        notifier_name = #{record.notifierName,jdbcType=VARCHAR},
      </if>
      <if test="record.outTitle != null" >
        out_title = #{record.outTitle,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notification
    set id = #{record.id,jdbcType=INTEGER},
      notifier = #{record.notifier,jdbcType=INTEGER},
      receiver = #{record.receiver,jdbcType=INTEGER},
      outer_id = #{record.outerId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      notifier_name = #{record.notifierName,jdbcType=VARCHAR},
      out_title = #{record.outTitle,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.cy.ly.javaBean.Notification" >
    update notification
    <set >
      <if test="notifier != null" >
        notifier = #{notifier,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="outerId != null" >
        outer_id = #{outerId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="notifierName != null" >
        notifier_name = #{notifierName,jdbcType=VARCHAR},
      </if>
      <if test="outTitle != null" >
        out_title = #{outTitle,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.cy.ly.javaBean.Notification" >
    update notification
    set notifier = #{notifier,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=INTEGER},
      outer_id = #{outerId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      notifier_name = #{notifierName,jdbcType=VARCHAR},
      out_title = #{outTitle,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.example.demo.cy.ly.javaBean.NotificationExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>